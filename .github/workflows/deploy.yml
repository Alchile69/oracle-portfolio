# Force GitHub Actions re-scan
name: Deploy Oracle Portfolio 3.0

on:
  push:
    branches: [ staging ]
  workflow_dispatch:

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Firebase CLI
        run: |
          npm install -g firebase-tools
          
      - name: Install Node.js dependencies
        run: |
          cd functions
          npm ci
          
      - name: Create Python venv and Deploy to Staging
        run: |
          echo "Creating Python virtual environment in functions-python..."
          cd functions-python
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          echo "Python venv created and dependencies installed"
          ls -la venv/bin/
          echo "Current directory: $(pwd)"
          echo "Contents of current directory:"
          ls -la
          echo "Deploying to Firebase from functions-python directory..."
          firebase deploy --only functions:python --project oracle-portfolio-staging --token "$FIREBASE_TOKEN"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          ALPHA_VANTAGE_KEY: ${{ secrets.ALPHA_VANTAGE_KEY }}
          EIA_API_KEY: ${{ secrets.EIA_API_KEY }}
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' && success()
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Firebase CLI
        run: |
          npm install -g firebase-tools
          
      - name: Install Node.js dependencies
        run: |
          cd functions
          npm ci
          
      - name: Create Python venv and Deploy to Production
        run: |
          echo "Creating Python virtual environment in functions-python..."
          cd functions-python
          python3 -m venv venv
          . venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          echo "Deploying to Firebase from functions-python directory..."
          firebase deploy --only functions:python --project oracle-portfolio-prod --token "$FIREBASE_TOKEN"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          ALPHA_VANTAGE_KEY: ${{ secrets.ALPHA_VANTAGE_KEY }}
          EIA_API_KEY: ${{ secrets.EIA_API_KEY }}
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
