# Force GitHub Actions re-scan
name: Deploy Oracle Portfolio 3.0

on:
  push:
    branches: [ staging ]
  workflow_dispatch:

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Firebase CLI
        run: |
          npm install -g firebase-tools
          
      - name: Install Node.js dependencies
        run: |
          cd functions
          npm ci
          
      - name: Create Python venv EVERYWHERE and deploy
        run: |
          echo "=== Creating Python venv in functions-python ==="
          cd functions-python
          python3 -m venv venv
          ./venv/bin/pip install --upgrade pip
          ./venv/bin/pip install -r requirements.txt
          echo "=== Verifying venv in functions-python ==="
          ls -la venv/bin/
          
          echo "=== Creating SYMLINK venv at root ==="
          cd ..
          ln -sf functions-python/venv venv
          echo "=== Verifying symlink ==="
          ls -la venv/
          
          echo "=== Creating COPY of venv at root ==="
          cp -r functions-python/venv ./venv-root
          echo "=== Verifying copy ==="
          ls -la venv-root/
          
          echo "=== Final verification ==="
          echo "functions-python/venv:"
          ls -la functions-python/venv/bin/ | head -5
          echo "Root venv symlink:"
          ls -la venv/ | head -5
          echo "Root venv copy:"
          ls -la venv-root/ | head -5
          
          echo "=== Deploying to Firebase ==="
          firebase deploy --only functions:python --project oracle-portfolio-staging --token "$FIREBASE_TOKEN"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          ALPHA_VANTAGE_KEY: ${{ secrets.ALPHA_VANTAGE_KEY }}
          EIA_API_KEY: ${{ secrets.EIA_API_KEY }}
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' && success()
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Firebase CLI
        run: |
          npm install -g firebase-tools
          
      - name: Install Node.js dependencies
        run: |
          cd functions
          npm ci
          
      - name: Create Python venv EVERYWHERE and deploy
        run: |
          cd functions-python
          python3 -m venv venv
          ./venv/bin/pip install --upgrade pip
          ./venv/bin/pip install -r requirements.txt
          cd ..
          ln -sf functions-python/venv venv
          cp -r functions-python/venv ./venv-root
          firebase deploy --only functions:python --project oracle-portfolio-prod --token "$FIREBASE_TOKEN"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          ALPHA_VANTAGE_KEY: ${{ secrets.ALPHA_VANTAGE_KEY }}
          EIA_API_KEY: ${{ secrets.EIA_API_KEY }}
          FRED_API_KEY: ${{ secrets.FRED_API_KEY }}
