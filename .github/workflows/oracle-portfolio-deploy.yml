name: Deploy Oracle Portfolio 3.0

on:
  push:
    branches:
      - staging
      - main
    paths:
      - 'functions-python/**'
  workflow_dispatch:

jobs:
  deploy-oracle-portfolio:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Create and Install Python Dependencies in venv
        run: |
          cd functions-python
          python3.10 -m venv venv  # Créer l'environnement virtuel
          source venv/bin/activate # Activer l'environnement virtuel pour cette étape
          pip install --upgrade pip
          pip install -r requirements.txt
          deactivate # Désactiver après l'installation

      - name: Debug: List functions-python directory contents
        run: ls -la functions-python/

      - name: Debug: List functions-python/venv directory contents
        run: ls -la functions-python/venv/

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        run: |
          cd functions-python # Se déplacer dans le répertoire des fonctions Python
          source venv/bin/activate # Activer l'environnement virtuel
          firebase deploy --only functions --project oracle-portfolio-staging --token "${{ secrets.FIREBASE_TOKEN }}"
          # Note: --only functions (pas functions:python) car nous sommes déjà dans le répertoire de la codebase.

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main'
        run: |
          cd functions-python # Se déplacer dans le répertoire des fonctions Python
          source venv/bin/activate # Activer l'environnement virtuel
          firebase deploy --only functions --project oracle-portfolio-prod --token "${{ secrets.FIREBASE_TOKEN }}"
          # Note: --only functions (pas functions:python) car nous sommes déjà dans le répertoire de la codebase.

      - name: Health Check
        run: |
          if [ "${{ github.ref }}" == "refs/heads/staging" ]; then
            PROJECT="oracle-portfolio-staging"
          else
            PROJECT="oracle-portfolio-prod"
          fi
          echo "Testing Oracle Portfolio 3.0 health on $PROJECT..."
          curl -f "https://us-central1-$PROJECT.cloudfunctions.net/getSystemHealth" || exit 1
          echo "✅ Oracle Portfolio 3.0 deployed successfully!"
